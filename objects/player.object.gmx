<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_p_idle_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m_speed = 1;
p_direction= 270; //this is where the player will aim, should match where the sprite is facing
p_weapon= 0;
p_counter= 1;
p_health= 10;
//audio_play_sound(bgm_000, 10, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if keyboard_check(vk_shift) {m_speed=2

if keyboard_check(ord('W')) &amp;&amp; place_free(x,y-m_speed) {y-=m_speed; p_direction=90;}

if keyboard_check(ord('S')) &amp;&amp; place_free(x,y+m_speed) {y+=m_speed; p_direction=270;
    image_speed = 1/50;
    sprite_index = spr_p_ani_down;
}

if keyboard_check(ord('D')) &amp;&amp; place_free(x+m_speed,y) {x+=m_speed; p_direction=0;}
if keyboard_check(ord('A')) &amp;&amp; place_free(x-m_speed,y) {x-=m_speed; p_direction=180;}

if keyboard_check_released(vk_anykey){ //this could probably be done a lot nicer, but who's going to know? 
    if p_direction== 270 {
    sprite_index = spr_p_idle_down;                                         //!!!!!!!!!this could cause issues later, as it checks any key and and not just wsad!!!!!!!!!!!!
    }
    if p_direction== 0 {
    sprite_index = spr_p_idle_right;
    }
    if p_direction== 90 {
    sprite_index = spr_p_idle_up;
    }
    if p_direction== 180 {
    sprite_index = spr_p_idle_left;
    }
}

}

m_speed = 1;

if keyboard_check(ord('W')) &amp;&amp; place_free(x,y-m_speed) {y-=m_speed; p_direction=90;
    image_speed = 1/50;
    sprite_index = spr_p_ani_up;
}



if keyboard_check(ord('S')) &amp;&amp; place_free(x,y+m_speed) {y+=m_speed; p_direction=270;
        image_speed = 1/50;
        sprite_index = spr_p_ani_down;
}

if keyboard_check(ord('D')) &amp;&amp; place_free(x+m_speed,y) {x+=m_speed; p_direction=0;
    image_speed = 1/50;
    sprite_index = spr_p_ani_right;
}

if keyboard_check(ord('A')) &amp;&amp; place_free(x-m_speed,y) {x-=m_speed; p_direction=180;
    image_speed = 1/50;
    sprite_index = spr_p_ani_left;
}


if keyboard_check_released(vk_anykey){ 
    if p_direction== 270 {
    sprite_index = spr_p_idle_down;
    }
    if p_direction== 0 {
    sprite_index = spr_p_idle_right;
    }
    if p_direction== 90 {
    sprite_index = spr_p_idle_up;
    }
    if p_direction== 180 {
    sprite_index = spr_p_idle_left;
    }
}

//a counter for automatic weapons
if (p_counter == 18) {p_counter = 1;}
p_counter++;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_sign">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(ord('E'))){
    scr_text(other.sign_string, 0.25, view_xview[0] + 320 , view_yview[0] + 640);
    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_key_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(ord('E')) &amp;&amp; global.key_array[other.required_key] &gt; 0{
player_x = other.target_x;
player_y = other.target_y;
audio_play_sound(snd_open_door, 10, false);
room_goto(other.targetRoom);
}

else if keyboard_check_pressed(ord('E')) { 

   // instance_deactivate_all(false);
    scr_text(other.err_message, 0.25, view_xview[0] + 320 , view_yview[0] + 640);
    
       // if keyboard_check_pressed(ord('F')) {
       //     instance_activate_all();
            //instance_deactivate_object(obj_text);
        //}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(ord('E')){
player_x = other.target_x;
player_y = other.target_y;
audio_play_sound(snd_open_door, 10, false);
room_goto(other.targetRoom);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch p_weapon {

case 0: /*pistol

if (global.ammo_pistol &gt; 0){

with (instance_create(id.x, id.y, obj_bullet))
{
    direction = player.p_direction;
    image_angle = direction;
    speed = 20;
    audio_play_sound(snd_shoot, 10, false);
    }
    global.ammo_pistol += -1;
}*/
break;

case 1: //mini uzi
if (global.ammo_pistol &gt; 0) &amp;&amp; p_counter == 18{

with (instance_create(id.x, id.y, obj_bullet))
{
    direction = player.p_direction;
    image_angle = direction;
    speed = 20;
    audio_play_sound(snd_shoot, 10, false);
    }
    global.ammo_pistol += -1;
} 
break;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = player_x;
y = player_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///this should be clearing text from the screen
if global.is_text_on_screen == 1 {
    instance_deactivate_object(obj_text);
    global.is_text_on_screen = 0;
   // global.can_move = 1;
    //global.last_action_was_read = 0;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.gun_array[1] == 1 {
p_weapon = 1;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>p_weapon = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch p_weapon {

case 0: //pistol

if (global.ammo_pistol &gt; 0){

with (instance_create(id.x, id.y, obj_bullet))
{
    direction = player.p_direction;
    image_angle = direction;
    speed = 20;
    audio_play_sound(snd_shoot, 10, false);
    }
    global.ammo_pistol += -1;
}
break;

case 1: //mini uzi
/*if (global.ammo_pistol &gt; 0){

with (instance_create(id.x, id.y, obj_bullet))
{
    direction = player.p_direction;
    image_angle = direction;
    speed = 20;
    audio_play_sound(snd_shoot, 10, false);
    }
    global.ammo_pistol += -1;
} */
break;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
